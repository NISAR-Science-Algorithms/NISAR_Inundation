%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: Paul Siqueira
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Fri Sep 17 15:36:46 2021
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 744 def
/d_page_h 536 def
/d_header_x 0 def
/d_header_y 500 def
/d_header_w 744 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 744 def
/d_footer_h 0 def
/d_output_w 744 def
/d_output_h 500 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 1 def
/fname (atbd.pro) def
/fdir (.) def
/ftail (atbd.pro) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (09/16/21) def
/modtimestr (18:55:46) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 490 M
(;first, get all file names for HH and HV data) s
5 482 M
(;upper and lower sideband) s
5 466 M
(;thresholds) s
5 458 M
(;inundated veg class 1) s
5 450 M
(T0_0=1.) s
5 442 M
(T0_1=0.5) s
5 434 M
(T0_2=15.) s
5 426 M
(T0_3=20.) s
5 418 M
(;inundated veg class 2) s
5 410 M
(T1_0=1.0) s
5 402 M
(T1_1=0.5) s
5 394 M
(T1_2=15.) s
5 386 M
(T1_3=20.) s
5 378 M
(;open water class 1) s
5 370 M
(T2_0=1.) s
5 362 M
(T2_1=0.0001) s
5 354 M
(T2_2=15.) s
5 346 M
(T2_3=.1) s
5 338 M
(;open water class 2) s
5 330 M
(T3_0=1.) s
5 322 M
(T3_1=0.0001) s
5 314 M
(T3_2=15.) s
5 306 M
(T3_3=0.01) s
5 298 M
(;not inundated) s
5 290 M
(T4_0=1.0) s
5 282 M
(T4_1=0.05) s
5 274 M
(T4_2=15.) s
5 266 M
(T4_3=1.0) s
5 258 M
(;not classified) s
5 250 M
(T5_0=0.) s
5 242 M
(T5_1=0.0) s
5 234 M
(T5_2=15.0) s
5 226 M
(T5_3=.5) s
5 210 M
(ns=1604) s
5 202 M
(nl=1850) s
5 194 M
(val=fltarr\(ns,nl\)) s
5 186 M
(class0=bytarr\(ns,nl\)) s
5 178 M
(class1=bytarr\(ns,nl\)) s
5 170 M
(class2=bytarr\(ns,nl\)) s
5 162 M
(class3=bytarr\(ns,nl\)) s
5 154 M
(class4=bytarr\(ns,nl\)) s
5 146 M
(class5=bytarr\(ns,nl\)) s
5 138 M
(class6=bytarr\(ns,nl\)) s
5 122 M
(vers='02') s
5 114 M
(proc='CX') s
5 98 M
(;change detection) s
5 90 M
(;refine classes using change detection) s
5 82 M
(;1=yes) s
5 74 M
(change=0) s
5 58 M
(;if want to compare with classification of entire timespan dominant classication type) s
5 50 M
(class_temporal=0) s
5 26 M
(; two - HH and HV) s
5 18 M
(numpol=2) s
5 10 M
(pol=strarr\(numpol\)) s
5 2 M
(;two - lower and upper sideband for nummode) s
377 490 M
(nummode=2) s
377 482 M
(mode=strarr\(nummode\)) s
377 474 M
(;prefix for each date) s
377 466 M
(numdates=6) s
377 458 M
(prefix=strarr\(numdates\)) s
377 434 M
(;number of images in running average) s
377 426 M
(nt=2) s
377 418 M
(print,'multitemporal averaging over',nt,' images') s
377 402 M
(;number of averaged images per pol per mode over timespan nt) s
377 394 M
(na=numdates-nt+1) s
377 378 M
(avg=fltarr\(na,numpol,nummode,ns,nl\)) s
377 370 M
(avg_all=fltarr\(numpol,nummode,ns,nl\)) s
377 354 M
(n=intarr\(numpol,nummode\)) s
377 338 M
(;average modes together) s
377 330 M
(;1=yes) s
377 322 M
(mlmodes=1) s
377 314 M
(avg_mlmode=fltarr\(na,numpol,ns,nl\)) s
377 306 M
(avg_all_mlmode=fltarr\(numpol,ns,nl\)) s
377 282 M
(;correct = calibrate each image based on average backscatter over time) s
377 274 M
(;correct= 1, modify calibration based on corrfactor) s
377 266 M
(correct=1) s
377 258 M
(corrfactor=fltarr\(na,numpol,nummode\)) s
377 250 M
(meanval=fltarr\(numpol,nummode\)) s
377 226 M
(;wetland mask if available) s
377 218 M
(;1 = wetland area) s
377 210 M
(wetmask='wetland_mask.byt') s
377 202 M
(wet=MAKE_ARRAY\(ns,nl,/FLOAT, value=1.\)) s
377 186 M
(pol\(0\)='HHHH') s
377 178 M
(pol\(1\)='HVHV') s
377 162 M
(mode\(0\)='129A') s
377 154 M
(mode\(1\)='129B') s
377 138 M
(;19043) s
377 130 M
(prefix\(0\)='NISARA_02602_19043_000_190701_L090') s
377 114 M
(;19048) s
377 106 M
(prefix\(1\)='NISARA_02602_19048_000_190716_L090') s
377 90 M
(;19051) s
377 82 M
(prefix\(2\)='NISARA_02602_19051_000_190725_L090') s
377 66 M
(;19053) s
377 58 M
(prefix\(3\)='NISARA_02602_19053_012_190812_L090') s
377 42 M
(;19069) s
377 34 M
(prefix\(4\)='NISARA_02602_19069_000_190923_L090') s
377 18 M
(;19070) s
377 10 M
(prefix\(5\)='NISARA_02602_19070_002_190930_L090') s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 2 def
/fname (atbd.pro) def
/fdir (.) def
/ftail (atbd.pro) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (09/16/21) def
/modtimestr (18:55:46) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 482 M
(;directories for data) s
5 474 M
(;day number *10+modes) s
5 466 M
(ddir=strarr\(numdates*10+nummode+1\)) s
5 458 M
(ddir\(00\)='19043_129A/') s
5 450 M
(ddir\(01\)='19043_129B/') s
5 442 M
(ddir\(10\)='19048_129A/') s
5 434 M
(ddir\(11\)='19048_129B/') s
5 426 M
(ddir\(20\)='19051_129A/') s
5 418 M
(ddir\(21\)='19051_129B/') s
5 410 M
(ddir\(30\)='19053_129A/') s
5 402 M
(ddir\(31\)='19053_129B/') s
5 394 M
(ddir\(40\)='19069_129A/') s
5 386 M
(ddir\(41\)='19069_129B/') s
5 378 M
(ddir\(50\)='19070_129A/') s
5 370 M
(ddir\(51\)='19070_129B/') s
5 354 M
(date_acq=strarr\(numdates\)) s
5 346 M
(date_acq\(0\)='190701') s
5 338 M
(date_acq\(1\)='190716') s
5 330 M
(date_acq\(2\)='190725') s
5 322 M
(date_acq\(3\)='190812') s
5 314 M
(date_acq\(4\)='190923') s
5 306 M
(date_acq\(5\)='190930') s
5 290 M
(ct=0.) s
5 282 M
(ct2=0.) s
5 274 M
(ct3=0.) s
5 258 M
(;pols \(only real, HH and HV\)) s
5 250 M
(for j=0,1 do begin) s
5 234 M
(  ;modes \(upper and lower sideband\)) s
5 226 M
(  for i=0,1 do begin) s
5 210 M
(;output average image for all dates) s
5 202 M
(    out_all=strtrim\(string\(pol\(j\)\)\)+'_'+strtrim\(string\(mode\(i\)\),2\)+'_avg.flt') s
5 194 M
(    openw,5,out_all) s
5 178 M
(;print,'change mode and pol') s
5 170 M
(;dates) s
5 162 M
(    for k=0,numdates-1 do begin) s
5 146 M
(      inn=ddir\(k*10+i\)+prefix\(k\)+'_'+proc+'_'+pol\(j\)+'_'+mode\(i\)+'_'+vers+'.flt') s
5 130 M
(;     print,inn) s
5 122 M
(      openr,3,inn) s
5 114 M
(      readu,3,val) s
5 106 M
(      close,3) s
5 90 M
(       avg_all\(j,i,*,*\)=avg_all\(j,i,*,*\)+val/float\(numdates\)) s
5 82 M
(;nt is the number of images in each average) s
5 74 M
(;need to do rolling average over nt) s
5 66 M
(       for l=0,nt-1 do begin) s
5 58 M
(          if k-l ge 0 and k-l lt na then begin) s
5 50 M
(              avg\(k-l,j,i,*,*\)=avg\(k-l,j,i,*,*\)+val/float\(nt\)) s
5 42 M
(;              print,k-l,j,i,size\(avg\(k-l,j,i,*,*\),/n_elements\)) s
5 34 M
(          endif) s
5 26 M
(       endfor) s
5 2 M
(;average backscatter for each rolling average) s
377 490 M
(;      print,'k,nt,na',k, nt,na) s
377 482 M
(      if k ge nt-1  and k le na+nt then begin) s
377 474 M
(        outn=strtrim\(string\(pol\(j\)\)\)+'_'+strtrim\(string\(mode\(i\)\),2\)+'_'+strtrim\(string) s
377 466 M
(\(k-nt+1\),2\)+'.flt') s
377 458 M
(        tmp=avg\(k-nt+1,j,i,*,*\)) s
377 450 M
(    ) s
377 442 M
(        x=where\(tmp le 0,count\)) s
377 434 M
(        tmp\(x\)=sqrt\(-1\)) s
377 426 M
(        corrfactor\(k-nt+1,j,i\)=mean\(tmp,/nan\)) s
377 418 M
(;        print,k-nt+1,j,i,corrfactor\(k-nt+1,j,i\)) s
377 410 M
(        openw,4,outn) s
377 402 M
(        writeu,4,tmp) s
377 394 M
(        close,4) s
377 386 M
(      endif) s
377 370 M
(;end date loop) s
377 362 M
(    endfor) s
377 346 M
(  tmp=avg_all\(j,i,*,*\)) s
377 338 M
(  x=where\(tmp le 0,count\)) s
377 330 M
(  tmp\(x\)=sqrt\(-1\)) s
377 322 M
(;  print,mean\(tmp,/nan\)) s
377 314 M
(  meanval\(j,i\)=mean\(tmp,/nan\)) s
377 306 M
(  writeu,5,tmp) s
377 298 M
(  close,5) s
377 282 M
(  ) s
377 274 M
(; end mode loop) s
377 266 M
(  endfor) s
377 258 M
(;end pol loop) s
377 250 M
(endfor) s
377 234 M
(x=where\(tmp lt 0.00001 or finite\(tmp\) eq 0,count\)) s
377 226 M
(if count gt 0 then wet\(x\)=0) s
377 210 M
(;print,numdates) s
377 194 M
(if correct eq 1 then print,'correcting each output image based on comparison with aver) s
377 186 M
(age over entire time span') s
377 170 M
(;normalize possible correction factors to correct possible calibration errors if neede) s
377 162 M
(d) s
377 154 M
(for j=0,numpol-1 do begin) s
377 146 M
(  for i=0,nummode-1 do begin) s
377 138 M
(    for k=0,na-1 do begin) s
377 130 M
(;      print,date_acq\(k\),' ',pol\(j\),' ',mode\(i\),corrfactor\(k,j,i\),meanval\(j,i\),corrfac) s
377 122 M
(tor\(k,j,i\)/meanval\(j,i\)) s
377 114 M
(      corrfactor\(k,j,i\)=corrfactor\(k,j,i\)/meanval\(j,i\)) s
377 98 M
(; correct if necessary) s
377 90 M
(      if correct eq 1 then begin) s
377 82 M
(        avg\(k,j,i,*,*\)=avg\(k,j,i,*,*\)/corrfactor\(k,j,i\)) s
377 74 M
(        outn=strtrim\(string\(pol\(j\)\)\)+'_'+strtrim\(string\(mode\(i\)\),2\)+'_'+strtrim\(string) s
377 66 M
(\(k\),2\)+'_avg_corr.flt') s
377 58 M
(        openw,4,outn) s
377 50 M
(        writeu,4,avg\(k,j,i,*,*\)) s
377 42 M
(        close,4) s
377 34 M
(      endif) s
377 26 M
(    endfor) s
377 18 M
(  endfor) s
377 10 M
(endfor) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 3 def
/fname (atbd.pro) def
/fdir (.) def
/ftail (atbd.pro) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (09/16/21) def
/modtimestr (18:55:46) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 490 M
(;merge modes by mlooking them) s
5 482 M
(if mlmodes eq 1 then begin) s
5 474 M
(  for j=0,numpol-1 do begin) s
5 466 M
(    out_all=strtrim\(string\(pol\(j\)\)\)+'_avgml.flt') s
5 458 M
(    openw,8,out_all) s
5 450 M
(    for k=0,na-1 do begin) s
5 442 M
(        outn=strtrim\(string\(pol\(j\)\)\)+'_'+strtrim\(string\(k\),2\)+'_avgml_corr.flt') s
5 434 M
(        tmp=\(avg\(k,j,0,*,*\)+avg\(k,j,1,*,*\)\)/2.0) s
5 426 M
(        x=where\(tmp le 0,count\)) s
5 418 M
(        tmp\(x\)=sqrt\(-1\)) s
5 410 M
(        avg_mlmode\(k,j,*,*\)=tmp) s
5 402 M
(        openw,4,outn) s
5 394 M
(        writeu,4,tmp) s
5 386 M
(        close,4) s
5 378 M
(    endfor) s
5 370 M
(    avg_all_mlmode\(j,*,*\)=\(avg_all\(j,0,*,*\)+avg_all\(j,1,*,*\)\)/2.0) s
5 362 M
(    tmp=avg_all_mlmode\(j,*,*\)) s
5 354 M
(    x=where\(tmp le 0,count\)) s
5 346 M
(    tmp\(x\)=sqrt\(-1\)) s
5 338 M
(    writeu,8,tmp) s
5 330 M
(    close,8) s
5 314 M
(  endfor) s
5 306 M
(endif) s
5 290 M
(;classification) s
5 266 M
(;Classification of avg_all to obtain dominant state of inundation over the time period) s
5 258 M
(.) s
5 226 M
(; classification of each date average over the timespan of all images) s
5 218 M
(;compare with dominant state of inundation... TBD) s
5 210 M
(if class_temporal eq 1 then begin) s
5 194 M
(;class_temporal or not) s
5 186 M
( endif) s
5 170 M
(if mlmodes eq 1 then nummode=1) s
5 154 M
(  for i=0,nummode-1 do begin) s
5 146 M
(    for k=0,na-1 do begin) s
5 138 M
(        if nummode eq 0 then begin) s
5 130 M
(           outn='class_'+strtrim\(string\(mode\(i\)\),2\)+'_'+strtrim\(string\(k\),2\)+'.byt') s
5 122 M
(           outn1ha='class_'+strtrim\(string\(mode\(i\)\),2\)+'_'+strtrim\(string\(k\),2\)+'_1ha.) s
5 114 M
(byt') s
5 106 M
(        endif) s
5 98 M
(        if nummode eq 1 then begin) s
5 90 M
(           outn='class_'+strtrim\(string\(k\),2\)+'.byt') s
5 82 M
(           outn1ha='class_'+strtrim\(string\(k\),2\)+'_1ha.byt') s
5 74 M
(        endif) s
5 66 M
(        if mlmodes eq 1 then begin) s
5 58 M
(          tmpHH=avg_mlmode\(k,0,*,*\)) s
5 50 M
(          tmpHV=avg_mlmode\(k,1,*,*\)) s
5 42 M
(        endif else begin) s
5 34 M
(          tmpHH=avg\(k,0,i,*,*\)) s
5 26 M
(          tmpHV=avg\(k,1,i,*,*\)) s
5 18 M
(        endelse) s
5 10 M
(print,outn) s
5 2 M
(print,outn1ha) s
377 474 M
(;class 0 -- inundated vegetation  first class) s
377 466 M
(;if HH/HV > thresh1 and HH gt tresh2) s
377 458 M
(      x=where\(tmpHH/tmpHV gt T0_0 and tmpHH/tmpHV lt T0_2 and tmpHH gt T0_1 and tmpHH ) s
377 450 M
(lt T0_3 and wet eq 1., count\)) s
377 442 M
(      class0=bytarr\(ns,nl\)) s
377 434 M
(      class0\(x\)=1) s
377 418 M
(;class 1 -- inundated vegetation second class) s
377 410 M
(;if HH/HV > thresh1 and HH gt tresh2) s
377 402 M
(      x=where\(tmpHH/tmpHV gt T1_0 and tmpHH/tmpHV lt T1_2 and tmpHH gt T1_1 and tmpHH ) s
377 394 M
(lt T1_3 and wet eq 1., count\)) s
377 386 M
(      class1=bytarr\(ns,nl\)) s
377 378 M
(      class1\(x\)=1) s
377 362 M
(;class 2 -- open water first class) s
377 354 M
(;if HH/HV > thresh1 and HH lt tresh2) s
377 346 M
(      x=where\(tmpHH/tmpHV gt T2_0 and tmpHH/tmpHV lt T2_2 and tmpHH gt T2_1 and tmpHH ) s
377 338 M
(lt T2_3 and wet eq 1., count\)) s
377 330 M
(      class2=bytarr\(ns,nl\)) s
377 322 M
(      class2\(x\)=1) s
377 306 M
(;class 3 -- open water second class) s
377 298 M
(;if HH/HV > thresh1 and HH lt tresh2) s
377 290 M
(      x=where\(tmpHH/tmpHV gt T3_0 and tmpHH/tmpHV lt T3_2 and tmpHH gt T3_1 and tmpHH ) s
377 282 M
(lt T3_3 and wet eq 1., count\)) s
377 274 M
(      class3=bytarr\(ns,nl\)) s
377 266 M
(      class3\(x\)=1) s
377 250 M
(;classs4 -- not inundated class) s
377 242 M
(;if HH/HV > thresh1 and HH lt tresh2) s
377 234 M
(      x=where\(tmpHH/tmpHV gt T4_0 and tmpHH/tmpHV lt T4_2 and tmpHH gt T4_1 and tmpHH ) s
377 226 M
(lt T4_3 and wet eq 1., count\)) s
377 218 M
(      class4=bytarr\(ns,nl\)) s
377 210 M
(      class4\(x\)=1) s
377 194 M
(; class 5 - not classified) s
377 186 M
(;due to unexpected  or unphysical values) s
377 178 M
(; for example) s
377 162 M
(      x=where\(tmpHH/tmpHV gt T5_0 and tmpHH/tmpHV lt T5_2 and tmpHH gt T5_1 and tmpHH ) s
377 154 M
(lt T5_3 and wet eq 1., count\)) s
377 146 M
(      class5=bytarr\(ns,nl\)) s
377 138 M
(      class5\(x\)=1) s
377 122 M
(; class 6 - no class) s
377 114 M
(;none of the other classes) s
377 98 M
(      x=where\(wet eq 1. and class0 eq 0 and class1 eq 0 and class2 eq 0 and class3 eq ) s
377 90 M
(0 and class4 eq 0 and class5 eq 0, count\)) s
377 82 M
(      class6=bytarr\(ns,nl\)) s
377 74 M
(      class6\(x\)=1) s
377 50 M
(initclass=bytarr\(ns,nl\)) s
377 42 M
(x=where\(wet eq 0,count\)) s
377 34 M
(;no data) s
377 26 M
(if count gt 0 then initclass\(x\)=10) s
377 18 M
(x=where\(initclass eq 0 and class0 eq 1, count\)) s
377 10 M
(if count gt 0 then initclass\(x\)=byte\(0\)*class0\(x\)) s
377 2 M
(x=where\(initclass eq 0 and class1 eq 1, count\)) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
90 rotate
24 -574 translate
/pagenum 4 def
/fname (atbd.pro) def
/fdir (.) def
/ftail (atbd.pro) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (09/16/21) def
/modtimestr (18:55:46) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 490 M
(if count gt 0 then initclass\(x\)=byte\(1\)*class1\(x\)) s
5 482 M
(x=where\(initclass eq 0 and class2 eq 1, count\)) s
5 474 M
(if count gt 0 then initclass\(x\)=byte\(2\)*class2\(x\)) s
5 466 M
(x=where\(initclass eq 0 and class3 eq 1, count\)) s
5 458 M
(if count gt 0 then initclass\(x\)=byte\(3\)*class3\(x\)) s
5 450 M
(x=where\(initclass eq 0 and class4 eq 1, count\)) s
5 442 M
(if count gt 0 then initclass\(x\)=byte\(4\)*class4\(x\)) s
5 434 M
(x=where\(initclass eq 0 and class5 eq 1, count\)) s
5 426 M
(if count gt 0 then initclass\(x\)=byte\(5\)*class5\(x\)) s
5 418 M
(x=where\(initclass eq 0 and class6 eq 1, count\)) s
5 410 M
(if count gt 0 then initclass\(x\)=byte\(6\)*class6\(x\)) s
5 378 M
(;output initial class estimates) s
5 370 M
(    openw,41,outn) s
5 362 M
(    writeu,41,initclass) s
5 354 M
(    close,41) s
5 338 M
(;aggregate to 1 ha) s
5 330 M
(class1ha=bytarr\(ns,nl\)) s
5 314 M
(x1=where\(initclass eq 10\)) s
5 306 M
(for i=0,ns-11,10 do begin) s
5 298 M
(    for j=0,nl-11,10 do begin) s
5 290 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 0,count0\)) s
5 282 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 1,count1\)) s
5 274 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 2,count2\)) s
5 266 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 3,count3\)) s
5 258 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 4,count4\)) s
5 250 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 5,count5\)) s
5 242 M
(         x=where\(initclass\(i:i+9,j:j+9\) eq 6,count6\)) s
5 234 M
(         if count0 + count1 gt 33 then begin) s
5 226 M
(           class1ha\(i:i+9,j:J+9\)=1) s
5 218 M
(         endif else begin) s
5 210 M
(             if count2 + count3  gt 10 then begin) s
5 202 M
(                 class1ha\(i:i+9,j:J+9\)=2) s
5 194 M
(             endif else begin) s
5 186 M
(                class1ha\(i:i+9,j:J+9\)=3) s
5 178 M
(             endelse) s
5 170 M
(         endelse) s
5 162 M
(    endfor) s
5 154 M
(endfor) s
5 130 M
(; aggregated 1ha classes) s
5 122 M
(; 0 -  no data) s
5 114 M
(; 1 - inundated vegetation) s
5 106 M
(; 2 - open water) s
5 98 M
(; 3 - not inundated) s
5 82 M
(    class1ha\(x1\)=0) s
5 74 M
(    openw,41,outn1ha) s
5 66 M
(    writeu,41,class1ha) s
5 58 M
(    close,41) s
5 34 M
(    endfor) s
5 26 M
(  endfor) s
5 10 M
(;compare with change detection if desired) s
5 2 M
(if change eq 1 then begin) s
377 482 M
(  for i=0,nummode-1 do begin) s
377 474 M
(    for k=0,na-1 do begin) s
377 458 M
(;not inundated to inundated vegetation) s
377 442 M
(;inundated vegetation to not inundated) s
377 426 M
(;not inundated to open water) s
377 410 M
(;open water to not inundated) s
377 394 M
(    endfor) s
377 386 M
(  endfor) s
377 378 M
(endif) s
377 338 M
(end) s
_R
S
%%Trailer
%%Pages: 4
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
